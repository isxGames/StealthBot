//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace StealthBot.Core
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class CorporationModelContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new CorporationModelContainer object using the connection string found in the 'CorporationModelContainer' section of the application configuration file.
        /// </summary>
        public CorporationModelContainer() : base("name=CorporationModelContainer", "CorporationModelContainer")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CorporationModelContainer object.
        /// </summary>
        public CorporationModelContainer(string connectionString) : base(connectionString, "CorporationModelContainer")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CorporationModelContainer object.
        /// </summary>
        public CorporationModelContainer(EntityConnection connection) : base(connection, "CorporationModelContainer")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Corporation> Corporations
        {
            get
            {
                if ((_Corporations == null))
                {
                    _Corporations = base.CreateObjectSet<Corporation>("Corporations");
                }
                return _Corporations;
            }
        }
        private ObjectSet<Corporation> _Corporations;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Corporations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCorporations(Corporation corporation)
        {
            base.AddObject("Corporations", corporation);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CorporationModel", Name="Corporation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Corporation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Corporation object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="corpID">Initial value of the CorpID property.</param>
        /// <param name="ticker">Initial value of the Ticker property.</param>
        /// <param name="allianceID">Initial value of the AllianceID property.</param>
        public static Corporation CreateCorporation(global::System.Int32 id, global::System.String name, global::System.Int32 corpID, global::System.String ticker, global::System.Int32 allianceID)
        {
            Corporation corporation = new Corporation();
            corporation.Id = id;
            corporation.Name = name;
            corporation.CorpID = corpID;
            corporation.Ticker = ticker;
            corporation.AllianceID = allianceID;
            return corporation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            private set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Name of the Corporation
        /// </summary>
        /// <LongDescription>
        /// Name of the Corporation
        /// </LongDescription>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CorpID
        {
            get
            {
                return _CorpID;
            }
            set
            {
                OnCorpIDChanging(value);
                ReportPropertyChanging("CorpID");
                _CorpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CorpID");
                OnCorpIDChanged();
            }
        }
        private global::System.Int32 _CorpID;
        partial void OnCorpIDChanging(global::System.Int32 value);
        partial void OnCorpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Ticker
        {
            get
            {
                return _Ticker;
            }
            set
            {
                OnTickerChanging(value);
                ReportPropertyChanging("Ticker");
                _Ticker = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Ticker");
                OnTickerChanged();
            }
        }
        private global::System.String _Ticker;
        partial void OnTickerChanging(global::System.String value);
        partial void OnTickerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AllianceID
        {
            get
            {
                return _AllianceID;
            }
            set
            {
                OnAllianceIDChanging(value);
                ReportPropertyChanging("AllianceID");
                _AllianceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AllianceID");
                OnAllianceIDChanged();
            }
        }
        private global::System.Int32 _AllianceID;
        partial void OnAllianceIDChanging(global::System.Int32 value);
        partial void OnAllianceIDChanged();

        #endregion
    
    }

    #endregion
    
}
