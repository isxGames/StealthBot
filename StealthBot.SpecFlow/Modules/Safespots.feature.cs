// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.34003
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace StealthBot.SpecFlow.Modules
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Safespots")]
    [NUnit.Framework.CategoryAttribute("Safespots")]
    public partial class SafespotsFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Safespots.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Safespots", "In order to intelligently flee to safety\r\nAs the bot\r\nI want to determine if I sh" +
                    "ould flee and where to go", ProgrammingLanguage.CSharp, new string[] {
                        "Safespots"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 7
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "!this",
                        "TypeID",
                        "Type",
                        "GroupID",
                        "Group"});
            table1.AddRow(new string[] {
                        "<<cloak>>",
                        "11370",
                        "Prototype Cloaking Device I",
                        "330",
                        "Cloaking Device"});
#line 8
testRunner.Given("Items exist", ((string)(null)), table1, "Given ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Am I safe - In Station")]
        public virtual void AmISafe_InStation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Am I safe - In Station", ((string[])(null)));
#line 12
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line 13
testRunner.Given("I am in a station", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 14
testRunner.When("I check if I am safe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 15
testRunner.Then("the result should be \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Am I safe - In space, within tower shields of any tower")]
        public virtual void AmISafe_InSpaceWithinTowerShieldsOfAnyTower()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Am I safe - In space, within tower shields of any tower", ((string[])(null)));
#line 17
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line 18
testRunner.Given("I am in space", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "X",
                        "Y",
                        "Z",
                        "TypeID",
                        "Distance",
                        "GroupID"});
            table2.AddRow(new string[] {
                        "Cylons Were Here",
                        "1",
                        "1",
                        "1",
                        "27786",
                        "29999",
                        "365"});
#line 19
testRunner.And("I have entities", ((string)(null)), table2, "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "TypeID",
                        "Type",
                        "ShieldRadius"});
            table3.AddRow(new string[] {
                        "27786",
                        "True Sansha Control Tower",
                        "30000"});
#line 23
testRunner.And("I have item info", ((string)(null)), table3, "And ");
#line 26
testRunner.When("I check if I am safe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 27
testRunner.Then("the result should be \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Am I safe - In Space, within warp range of a \"safe\" bookmark, local is safe")]
        public virtual void AmISafe_InSpaceWithinWarpRangeOfASafeBookmarkLocalIsSafe()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Am I safe - In Space, within warp range of a \"safe\" bookmark, local is safe", ((string[])(null)));
#line 29
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line 30
testRunner.Given("I am in space", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 31
testRunner.And("I am in solarsystem ID \'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
testRunner.And("my safe bookmark prefix is \'safe: \'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Label",
                        "X",
                        "Y",
                        "Z",
                        "SolarSystemID"});
            table4.AddRow(new string[] {
                        "safe: bookmark",
                        "0",
                        "0",
                        "0",
                        "1"});
#line 33
testRunner.And("I have bookmarks", ((string)(null)), table4, "And ");
#line 37
testRunner.And("I am at point \'0\',\'0\',\'0\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 38
testRunner.And("local is safe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 39
testRunner.When("I check if I am safe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 40
testRunner.Then("the result should be \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Am I safe - In Space, within warp range of a \"safe\" bookmark, local is not safe b" +
            "ut I have a cloak and can cloak")]
        public virtual void AmISafe_InSpaceWithinWarpRangeOfASafeBookmarkLocalIsNotSafeButIHaveACloakAndCanCloak()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Am I safe - In Space, within warp range of a \"safe\" bookmark, local is not safe b" +
                    "ut I have a cloak and can cloak", ((string[])(null)));
#line 42
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line 43
testRunner.Given("I am in space", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 44
testRunner.And("I am in solarsystem ID \'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 45
testRunner.And("my safe bookmark prefix is \'safe: \'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Label",
                        "X",
                        "Y",
                        "Z",
                        "SolarSystemID"});
            table5.AddRow(new string[] {
                        "safe: bookmark",
                        "0",
                        "0",
                        "0",
                        "1"});
#line 46
testRunner.And("I have bookmarks", ((string)(null)), table5, "And ");
#line 50
testRunner.And("I am at point \'0\',\'0\',\'0\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 51
testRunner.And("local is not safe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "ToItem"});
            table6.AddRow(new string[] {
                        "00000001",
                        "<<cloak>>"});
#line 52
testRunner.And("I have cloaking device modules", ((string)(null)), table6, "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "IsTargetingMe"});
#line 55
testRunner.And("I have entities", ((string)(null)), table7, "And ");
#line 57
testRunner.When("I check if I am safe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 58
testRunner.Then("the result should be \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Am I safe - In Space, within warp range of a \"safe\" bookmark, local is not safe b" +
            "ut I have a cloak and can\'t cloak")]
        public virtual void AmISafe_InSpaceWithinWarpRangeOfASafeBookmarkLocalIsNotSafeButIHaveACloakAndCanTCloak()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Am I safe - In Space, within warp range of a \"safe\" bookmark, local is not safe b" +
                    "ut I have a cloak and can\'t cloak", ((string[])(null)));
#line 60
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line 61
testRunner.Given("I am in space", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 62
testRunner.And("I am in solarsystem ID \'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 63
testRunner.And("my safe bookmark prefix is \'safe: \'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "Name",
                        "X",
                        "Y",
                        "Z",
                        "GroupID",
                        "Distance",
                        "IsTargetingMe"});
            table8.AddRow(new string[] {
                        "1",
                        "Joe Jackass",
                        "0",
                        "0",
                        "0",
                        "444",
                        "150000",
                        "true"});
#line 64
testRunner.And("I have entities", ((string)(null)), table8, "And ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Label",
                        "X",
                        "Y",
                        "Z",
                        "SolarSystemID"});
            table9.AddRow(new string[] {
                        "safe: bookmark",
                        "0",
                        "0",
                        "0",
                        "1"});
#line 67
testRunner.And("I have bookmarks", ((string)(null)), table9, "And ");
#line 71
testRunner.And("I am at point \'0\',\'0\',\'0\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 72
testRunner.And("local is not safe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "ToItem"});
            table10.AddRow(new string[] {
                        "00000001",
                        "<<cloak>>"});
#line 73
testRunner.And("I have cloaking device modules", ((string)(null)), table10, "And ");
#line 76
testRunner.When("I check if I am safe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 77
testRunner.Then("the result should be \'false\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Am I safe - In Space, within warp range of a \"safe\" bookmark, bookmark in differe" +
            "nt system")]
        public virtual void AmISafe_InSpaceWithinWarpRangeOfASafeBookmarkBookmarkInDifferentSystem()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Am I safe - In Space, within warp range of a \"safe\" bookmark, bookmark in differe" +
                    "nt system", ((string[])(null)));
#line 79
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line 80
testRunner.Given("I am in space", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 81
testRunner.And("I am in solarsystem ID \'0\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 82
testRunner.And("my safe bookmark prefix is \'safe: \'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Label",
                        "X",
                        "Y",
                        "Z",
                        "SolarSystemID"});
            table11.AddRow(new string[] {
                        "safe: bookmark",
                        "0",
                        "0",
                        "0",
                        "1"});
#line 83
testRunner.And("I have bookmarks", ((string)(null)), table11, "And ");
#line 87
testRunner.And("I am at point \'0\',\'0\',\'0\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 88
testRunner.When("I check if I am safe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 89
testRunner.Then("the result should be \'false\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Am I safe - In space, no \"safe\" bookmarks, within warp-in range of a planet, loca" +
            "l is safe")]
        public virtual void AmISafe_InSpaceNoSafeBookmarksWithinWarp_InRangeOfAPlanetLocalIsSafe()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Am I safe - In space, no \"safe\" bookmarks, within warp-in range of a planet, loca" +
                    "l is safe", ((string[])(null)));
#line 91
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line 92
testRunner.Given("I am in space", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "Name",
                        "X",
                        "Y",
                        "Z",
                        "GroupID",
                        "Distance"});
            table12.AddRow(new string[] {
                        "1",
                        "Dodixie IX",
                        "0",
                        "0",
                        "0",
                        "7",
                        "100000000000"});
#line 94
testRunner.And("I have entities", ((string)(null)), table12, "And ");
#line 98
testRunner.And("my safe bookmark prefix is \'safe: \'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Label",
                        "X",
                        "Y",
                        "Z",
                        "SolarSystemID"});
#line 99
testRunner.And("I have bookmarks", ((string)(null)), table13, "And ");
#line 101
testRunner.And("local is safe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 102
testRunner.When("I check if I am safe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 103
testRunner.Then("the result should be \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Am I safe - In space, no \"safe\" bookmarks, within warp-in range of a planet, loca" +
            "l is not safe but I have a cloak and can cloak")]
        public virtual void AmISafe_InSpaceNoSafeBookmarksWithinWarp_InRangeOfAPlanetLocalIsNotSafeButIHaveACloakAndCanCloak()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Am I safe - In space, no \"safe\" bookmarks, within warp-in range of a planet, loca" +
                    "l is not safe but I have a cloak and can cloak", ((string[])(null)));
#line 105
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line 106
testRunner.Given("I am in space", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "Name",
                        "X",
                        "Y",
                        "Z",
                        "GroupID",
                        "Distance",
                        "IsTargetingMe"});
            table14.AddRow(new string[] {
                        "1",
                        "Dodixie IX",
                        "0",
                        "0",
                        "0",
                        "7",
                        "100000000000",
                        "false"});
#line 108
testRunner.And("I have entities", ((string)(null)), table14, "And ");
#line 112
testRunner.And("my safe bookmark prefix is \'safe: \'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Label",
                        "X",
                        "Y",
                        "Z",
                        "SolarSystemID"});
#line 113
testRunner.And("I have bookmarks", ((string)(null)), table15, "And ");
#line 115
testRunner.And("local is not safe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "ToItem"});
            table16.AddRow(new string[] {
                        "00000001",
                        "<<cloak>>"});
#line 116
testRunner.And("I have cloaking device modules", ((string)(null)), table16, "And ");
#line 119
testRunner.When("I check if I am safe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 120
testRunner.Then("the result should be \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Am I safe - In space, no \"safe\" bookmarks, within warp-in range of a planet, loca" +
            "l is not safe but I have a cloak and can\'t cloak")]
        public virtual void AmISafe_InSpaceNoSafeBookmarksWithinWarp_InRangeOfAPlanetLocalIsNotSafeButIHaveACloakAndCanTCloak()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Am I safe - In space, no \"safe\" bookmarks, within warp-in range of a planet, loca" +
                    "l is not safe but I have a cloak and can\'t cloak", ((string[])(null)));
#line 122
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line 123
testRunner.Given("I am in space", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "Name",
                        "X",
                        "Y",
                        "Z",
                        "GroupID",
                        "Distance",
                        "IsTargetingMe"});
            table17.AddRow(new string[] {
                        "1",
                        "Dodixie IX",
                        "0",
                        "0",
                        "0",
                        "7",
                        "100000000000",
                        "false"});
            table17.AddRow(new string[] {
                        "2",
                        "Joe Jackass",
                        "0",
                        "0",
                        "0",
                        "444",
                        "150000",
                        "true"});
#line 125
testRunner.And("I have entities", ((string)(null)), table17, "And ");
#line 130
testRunner.And("my safe bookmark prefix is \'safe: \'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Label",
                        "X",
                        "Y",
                        "Z",
                        "SolarSystemID"});
#line 131
testRunner.And("I have bookmarks", ((string)(null)), table18, "And ");
#line 133
testRunner.And("local is not safe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "ToItem"});
            table19.AddRow(new string[] {
                        "00000001",
                        "<<cloak>>"});
#line 134
testRunner.And("I have cloaking device modules", ((string)(null)), table19, "And ");
#line 137
testRunner.When("I check if I am safe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 138
testRunner.Then("the result should be \'false\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Am I safe - Negative test - If we\'re not explicitly at a safespot, we shouldn\'t b" +
            "e considered at one")]
        public virtual void AmISafe_NegativeTest_IfWeReNotExplicitlyAtASafespotWeShouldnTBeConsideredAtOne()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Am I safe - Negative test - If we\'re not explicitly at a safespot, we shouldn\'t b" +
                    "e considered at one", ((string[])(null)));
#line 140
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line 141
testRunner.Given("I am in space", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 142
testRunner.And("my safe bookmark prefix is \'safe: \'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Label",
                        "X",
                        "Y",
                        "Z",
                        "SolarSystemID"});
#line 143
testRunner.And("I have bookmarks", ((string)(null)), table20, "And ");
#line 145
testRunner.When("I check if I am safe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 146
testRunner.Then("the result should be \'false\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Am I safe - In space, safe bookmarks, within warp-in range of a planet")]
        public virtual void AmISafe_InSpaceSafeBookmarksWithinWarp_InRangeOfAPlanet()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Am I safe - In space, safe bookmarks, within warp-in range of a planet", ((string[])(null)));
#line 148
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line 149
testRunner.Given("I am in space", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "Name",
                        "X",
                        "Y",
                        "Z",
                        "GroupID",
                        "Distance",
                        "IsTargetingMe"});
            table21.AddRow(new string[] {
                        "1",
                        "Dodixie IX",
                        "0",
                        "0",
                        "0",
                        "7",
                        "100000000000",
                        "false"});
#line 151
testRunner.And("I have entities", ((string)(null)), table21, "And ");
#line 155
testRunner.And("I am at point \'0\',\'0\',\'0\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 156
testRunner.And("I am in solarsystem ID \'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 157
testRunner.And("my safe bookmark prefix is \'safe: \'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 158
testRunner.And("local is safe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Label",
                        "X",
                        "Y",
                        "Z",
                        "SolarSystemID"});
            table22.AddRow(new string[] {
                        "safe: bookmark",
                        "146546",
                        "-64343684",
                        "4646",
                        "1"});
#line 159
testRunner.And("I have bookmarks", ((string)(null)), table22, "And ");
#line 162
testRunner.When("I check if I am safe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 163
testRunner.Then("the result should be \'false\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Am I safe - In space, no safe bookmarks, stations present, within warp-in range o" +
            "f a planet")]
        public virtual void AmISafe_InSpaceNoSafeBookmarksStationsPresentWithinWarp_InRangeOfAPlanet()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Am I safe - In space, no safe bookmarks, stations present, within warp-in range o" +
                    "f a planet", ((string[])(null)));
#line 165
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line 166
testRunner.Given("I am in space", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "Name",
                        "X",
                        "Y",
                        "Z",
                        "GroupID",
                        "Distance",
                        "IsTargetingMe"});
            table23.AddRow(new string[] {
                        "1",
                        "Dodixie IX",
                        "0",
                        "0",
                        "0",
                        "7",
                        "100000000000",
                        "false"});
            table23.AddRow(new string[] {
                        "2",
                        "Dodixie IX - 9 - Astral Mining Inc. Refinery",
                        "100",
                        "100",
                        "100",
                        "15",
                        "750987",
                        "false"});
#line 168
testRunner.And("I have entities", ((string)(null)), table23, "And ");
#line 173
testRunner.And("I am at point \'0\',\'0\',\'0\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 174
testRunner.And("I am in solarsystem ID \'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 175
testRunner.And("my safe bookmark prefix is \'safe: \'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 176
testRunner.And("local is safe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Label",
                        "X",
                        "Y",
                        "Z",
                        "SolarSystemID"});
#line 177
testRunner.And("I have bookmarks", ((string)(null)), table24, "And ");
#line 179
testRunner.When("I check if I am safe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 180
testRunner.Then("the result should be \'false\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Get safespot - All options available, should pick space safe")]
        public virtual void GetSafespot_AllOptionsAvailableShouldPickSpaceSafe()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get safespot - All options available, should pick space safe", ((string[])(null)));
#line 182
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line 183
testRunner.Given("I am in space", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 184
testRunner.And("my safe bookmark prefix is \'safe: \'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Label",
                        "X",
                        "Y",
                        "Z",
                        "SolarSystemID",
                        "ItemID",
                        "ID"});
            table25.AddRow(new string[] {
                        "safe: bookmark",
                        "16465",
                        "79798498",
                        "-47487676",
                        "1",
                        "-1",
                        "1"});
            table25.AddRow(new string[] {
                        "safe: station",
                        "-6546546",
                        "-2",
                        "1316354685",
                        "1",
                        "2",
                        "2"});
#line 185
testRunner.And("I have bookmarks", ((string)(null)), table25, "And ");
#line 189
testRunner.And("I am in solarsystem ID \'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "Name",
                        "X",
                        "Y",
                        "Z",
                        "GroupID",
                        "Distance",
                        "IsTargetingMe"});
            table26.AddRow(new string[] {
                        "1",
                        "Dodixie IX",
                        "0",
                        "0",
                        "0",
                        "7",
                        "900000000000",
                        "false"});
            table26.AddRow(new string[] {
                        "2",
                        "Dodixie IX - 9 - Astral Mining Inc. Refinery",
                        "100",
                        "100",
                        "100",
                        "15",
                        "750987",
                        "false"});
#line 190
testRunner.And("I have entities", ((string)(null)), table26, "And ");
#line 194
testRunner.And("my home station is \'Dodixie IX - 9 - Astral Mining Inc. Refinery\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 195
testRunner.When("I get a safe spot", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 196
testRunner.Then("the the destination should be a bookmark destination matching bookmark ID \'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Get safespot - No space safes available, should pick station safe")]
        public virtual void GetSafespot_NoSpaceSafesAvailableShouldPickStationSafe()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get safespot - No space safes available, should pick station safe", ((string[])(null)));
#line 198
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line 199
testRunner.Given("I am in space", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 200
testRunner.And("my safe bookmark prefix is \'safe: \'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Label",
                        "X",
                        "Y",
                        "Z",
                        "SolarSystemID",
                        "ItemID",
                        "ID"});
            table27.AddRow(new string[] {
                        "safe: station",
                        "-6546546",
                        "-2",
                        "1316354685",
                        "1",
                        "200",
                        "2"});
#line 201
testRunner.And("I have bookmarks", ((string)(null)), table27, "And ");
#line 204
testRunner.And("I am in solarsystem ID \'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "Name",
                        "X",
                        "Y",
                        "Z",
                        "GroupID",
                        "Distance",
                        "IsTargetingMe"});
            table28.AddRow(new string[] {
                        "1",
                        "Dodixie IX",
                        "0",
                        "0",
                        "0",
                        "7",
                        "900000000000",
                        "false"});
            table28.AddRow(new string[] {
                        "200",
                        "Dodixie IX - 9 - Astral Mining Inc. Refinery",
                        "100",
                        "100",
                        "100",
                        "15",
                        "750987",
                        "false"});
#line 205
testRunner.And("I have entities", ((string)(null)), table28, "And ");
#line 209
testRunner.And("my home station is \'Dodixie IX - 9 - Astral Mining Inc. Refinery\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 210
testRunner.When("I get a safe spot", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 211
testRunner.Then("the the destination should be an entity destination matching entity ID \'200\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Get safespot - No station safes available, should pick home station")]
        public virtual void GetSafespot_NoStationSafesAvailableShouldPickHomeStation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get safespot - No station safes available, should pick home station", ((string[])(null)));
#line 213
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line 214
testRunner.Given("I am in space", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 215
testRunner.And("my safe bookmark prefix is \'safe: \'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Label",
                        "X",
                        "Y",
                        "Z",
                        "SolarSystemID",
                        "ItemID",
                        "ID"});
#line 216
testRunner.And("I have bookmarks", ((string)(null)), table29, "And ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "Name",
                        "X",
                        "Y",
                        "Z",
                        "GroupID",
                        "Distance",
                        "IsTargetingMe"});
            table30.AddRow(new string[] {
                        "1",
                        "Dodixie IX",
                        "0",
                        "0",
                        "0",
                        "7",
                        "900000000000",
                        "false"});
            table30.AddRow(new string[] {
                        "200",
                        "Dodixie IX - 9 - Astral Mining Inc. Refinery",
                        "100",
                        "100",
                        "100",
                        "15",
                        "750987",
                        "false"});
#line 218
testRunner.And("I have entities", ((string)(null)), table30, "And ");
#line 222
testRunner.And("my home station is \'Dodixie IX - 9 - Astral Mining Inc. Refinery\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 223
testRunner.When("I get a safe spot", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 224
testRunner.Then("the the destination should be an entity destination matching entity ID \'200\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 225
testRunner.And("we should dock at the destination", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 226
testRunner.And("the destination\'s distance should be \'200\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Get safespot - No home station available, should pick any station")]
        public virtual void GetSafespot_NoHomeStationAvailableShouldPickAnyStation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get safespot - No home station available, should pick any station", ((string[])(null)));
#line 228
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line 229
testRunner.Given("I am in space", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 230
testRunner.And("my safe bookmark prefix is \'safe: \'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Label",
                        "X",
                        "Y",
                        "Z",
                        "SolarSystemID",
                        "ItemID",
                        "ID"});
#line 231
testRunner.And("I have bookmarks", ((string)(null)), table31, "And ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "Name",
                        "X",
                        "Y",
                        "Z",
                        "GroupID",
                        "Distance",
                        "IsTargetingMe"});
            table32.AddRow(new string[] {
                        "1",
                        "Dodixie IX",
                        "0",
                        "0",
                        "0",
                        "7",
                        "900000000000",
                        "false"});
            table32.AddRow(new string[] {
                        "200",
                        "Dodixie IX - 9 - Astral Mining Inc. Refinery",
                        "100",
                        "100",
                        "100",
                        "15",
                        "750987",
                        "false"});
#line 233
testRunner.And("I have entities", ((string)(null)), table32, "And ");
#line 237
testRunner.And("my home station is \'Dodixie IV - 20 - Blaze It Fgts\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 238
testRunner.When("I get a safe spot", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 239
testRunner.Then("the the destination should be an entity destination matching entity ID \'200\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 240
testRunner.And("we should dock at the destination", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 241
testRunner.And("the destination\'s distance should be \'200\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Get safespot - No station available, should pick a planet")]
        public virtual void GetSafespot_NoStationAvailableShouldPickAPlanet()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get safespot - No station available, should pick a planet", ((string[])(null)));
#line 243
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line 244
testRunner.Given("I am in space", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 245
testRunner.And("my safe bookmark prefix is \'safe: \'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Label",
                        "X",
                        "Y",
                        "Z",
                        "SolarSystemID",
                        "ItemID",
                        "ID"});
#line 246
testRunner.And("I have bookmarks", ((string)(null)), table33, "And ");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "Name",
                        "X",
                        "Y",
                        "Z",
                        "GroupID",
                        "Distance",
                        "IsTargetingMe"});
            table34.AddRow(new string[] {
                        "100",
                        "Dodixie IX",
                        "0",
                        "0",
                        "0",
                        "7",
                        "900000000000",
                        "false"});
#line 248
testRunner.And("I have entities", ((string)(null)), table34, "And ");
#line 251
testRunner.When("I get a safe spot", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 252
testRunner.Then("the the destination should be an entity destination matching entity ID \'100\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 253
testRunner.And("the destination\'s distance should be \'100000000000\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Get safespot - Should not return any safespot we\'re already at - Space safe")]
        public virtual void GetSafespot_ShouldNotReturnAnySafespotWeReAlreadyAt_SpaceSafe()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get safespot - Should not return any safespot we\'re already at - Space safe", ((string[])(null)));
#line 255
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line 256
testRunner.Given("I am in space", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 257
testRunner.And("I am at point \'16465\',\'79798498\',\'-47487676\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 258
testRunner.And("my safe bookmark prefix is \'safe: \'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "Label",
                        "X",
                        "Y",
                        "Z",
                        "SolarSystemID",
                        "ItemID",
                        "ID"});
            table35.AddRow(new string[] {
                        "safe: bookmark",
                        "16465",
                        "79798498",
                        "-47487676",
                        "1",
                        "-1",
                        "1"});
            table35.AddRow(new string[] {
                        "safe: bookmark 2",
                        "-6546546",
                        "-2",
                        "1316354685",
                        "1",
                        "-1",
                        "2"});
#line 259
testRunner.And("I have bookmarks", ((string)(null)), table35, "And ");
#line 263
testRunner.And("I am in solarsystem ID \'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "Name",
                        "X",
                        "Y",
                        "Z",
                        "GroupID",
                        "Distance",
                        "IsTargetingMe"});
#line 264
testRunner.And("I have entities", ((string)(null)), table36, "And ");
#line 266
testRunner.When("I get a safe spot", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 267
testRunner.Then("the the destination should be a bookmark destination matching bookmark ID \'2\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Get safespot - Should not return any safespot we\'re already at - Planets")]
        public virtual void GetSafespot_ShouldNotReturnAnySafespotWeReAlreadyAt_Planets()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get safespot - Should not return any safespot we\'re already at - Planets", ((string[])(null)));
#line 269
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line 270
testRunner.Given("I am in space", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 271
testRunner.And("my safe bookmark prefix is \'safe: \'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "Label",
                        "X",
                        "Y",
                        "Z",
                        "SolarSystemID",
                        "ItemID",
                        "ID"});
#line 272
testRunner.And("I have bookmarks", ((string)(null)), table37, "And ");
#line 274
testRunner.And("I am in solarsystem ID \'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "ID",
                        "Name",
                        "GroupID",
                        "Distance"});
            table38.AddRow(new string[] {
                        "100",
                        "Dodixie IX",
                        "7",
                        "40000000000"});
            table38.AddRow(new string[] {
                        "101",
                        "Dodixie X",
                        "7",
                        "871049581709827"});
#line 275
testRunner.And("I have entities", ((string)(null)), table38, "And ");
#line 279
testRunner.When("I get a safe spot", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 280
testRunner.Then("the the destination should be an entity destination matching entity ID \'101\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
